// Code generated by rakuten-swagger; DO NOT EDIT.
{{ if .Copyright -}}// {{ comment .Copyright -}}{{ end }}

package controller

import (
  "bytes"
  "encoding/json"
  "github.com/gin-gonic/gin"
  "io/ioutil"
  "log"
  "net/http"

  {{ range $key, $value := .Imports }}{{ $key }} {{ printf "%q" $value }}
  {{ end }}
)

func {{ pascalize .Name }}(c *gin.Context) {
  {{ if .SuccessResponse.IsSuccess }}var data {{ pascalize .SuccessResponse.Name }}
  {{ else }}var data string
  {{ end }}

  errText := ""
  resp, err := Request("{{ .Method }}", path{{ pascalize .Name }}(c), nil)
  defer resp.Body.Close()
  if err != nil {
    errText = err.Error()
  } else {
    result, err := ioutil.ReadAll(resp.Body)
    err = json.Unmarshal(result, &data)
    if err != nil {
      errText = err.Error()
    }
  }
  c.HTML(http.StatusOK, "{{ snakize .Name }}.html", gin.H{
    "title": "{{ .Summary }}",
    "data": data,
    "error": errText,
    "type": "{{ .SuccessResponse.Name }}",
  })
}

func path{{ pascalize .Name }}(c *gin.Context) string {
  path := "{{ .BasePath }}{{ .Path }}"
  {{if .PathParams }}
    replaces := []string{
    {{ range $key, $value := .PathParams }}{{ $value.Path }},{{ end }}
    }
    for i := range replaces {
    path = strings.Replace(path, "{" + replaces[i] + "}", c.Param(replaces[i]), 1)
    }
  {{ end }}
  return path
}